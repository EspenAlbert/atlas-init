openapi: 3.0.1
info:
  description: >-
    The MongoDB Atlas Administration API allows developers to manage all
    components in MongoDB Atlas.


    The Atlas Administration API uses HTTP Digest Authentication to authenticate requests. Provide a programmatic API public key and corresponding private key as the username and password when constructing the HTTP request. For example, to [return database access history](#tag/Access-Tracking/operation/listAccessLogsByClusterName) with [cURL](https://en.wikipedia.org/wiki/CURL), run the following command in the terminal:


    ```

    curl --user "{PUBLIC-KEY}:{PRIVATE-KEY}" \
      --digest \
      --header "Accept: application/vnd.atlas.2025-01-01+json" \
      -X GET "https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/dbAccessHistory/clusters/{clusterName}?pretty=true"
    ```


    To learn more, see [Get Started with the Atlas Administration API](https://www.mongodb.com/docs/atlas/configure-api-access/). For support, see [MongoDB Support](https://www.mongodb.com/support/get-started).
  license:
    name: CC BY-NC-SA 3.0 US
    url: https://creativecommons.org/licenses/by-nc-sa/3.0/us/
  termsOfService: https://www.mongodb.com/mongodb-management-service-terms-and-conditions
  title: MongoDB Atlas Administration API
  version: "2.0"
  x-xgen-sha: ee2764bd1a687c1e90356e0e6626d38dcf562279
servers:
  - url: https://cloud.mongodb.com
tags:
  - description: Returns access logs for authentication attempts made to Atlas
      database deployments. To view database access history, you must have
      either the Project Owner or Organization Owner role.
    name: Access Tracking
paths:
  /api/atlas/v2:
    get:
      description: This resource returns information about the MongoDB application
        along with API key meta data.
      operationId: getSystemStatus
      parameters: []
      responses:
        "200":
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: "#/components/schemas/SystemStatus"
              x-xgen-version: 2023-01-01
          description: OK
        "401":
          description: Unauthorized.
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Return the status of this MongoDB application
      tags:
        - Root
  "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor":
    post:
      description: Create one Stream Processor within the specified stream instance.
        To use this resource, the requesting API Key must have the Project Owner
        role or Project Stream Processing Owner role.
      operationId: createStreamProcessor
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the stream instance.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/vnd.atlas.2024-05-30+json:
            schema:
              $ref: "#/components/schemas/StreamsProcessor"
        description: Details to create an Atlas Streams Processor.
        required: true
      responses:
        "200":
          content:
            application/vnd.atlas.2024-05-30+json:
              schema:
                $ref: "#/components/schemas/StreamsProcessor"
              x-xgen-version: 2024-05-30
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "409":
          $ref: "#/components/responses/unauthorized"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Create One Stream Processor
      tags:
        - Streams
  "/api/atlas/v2/groups/{groupId}/streams/{tenantName}/processor/{processorName}":
    get:
      description: Get one Stream Processor within the specified stream instance. To
        use this resource, the requesting API Key must have the Project Owner
        role or Project Stream Processing Owner role.
      operationId: getStreamProcessor
      parameters:
        - $ref: "#/components/parameters/groupId"
        - description: Human-readable label that identifies the stream instance.
          in: path
          name: tenantName
          required: true
          schema:
            type: string
        - description: Human-readable label that identifies the stream processor.
          in: path
          name: processorName
          required: true
          schema:
            type: string
      responses:
        "200":
          content:
            application/vnd.atlas.2024-05-30+json:
              schema:
                $ref: "#/components/schemas/StreamsProcessorWithStats"
              x-xgen-version: 2024-05-30
          description: OK
        "400":
          $ref: "#/components/responses/badRequest"
        "401":
          $ref: "#/components/responses/unauthorized"
        "404":
          $ref: "#/components/responses/notFound"
        "500":
          $ref: "#/components/responses/internalServerError"
      security:
        - DigestAuth: []
      summary: Get One Stream Processor
      tags:
        - Streams
  "/api/atlas/v2/orgs/{orgId}/resourcePolicies":
    get:
      tags:
      - Atlas Resource Policies
      summary: Return all Atlas Resource Policies
      description: Return all Atlas Resource Policies for the org.
      operationId: getAtlasResourcePolicies
      parameters:
      - $ref: '#/components/parameters/orgId'
      responses:
        '200':
          description: OK
          content:
            application/vnd.atlas.2025-01-01+json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApiAtlasResourcePolicyView'
              x-xgen-version: '2025-01-01'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
        '500':
          $ref: '#/components/responses/internalServerError'
      security:
      - DigestAuth: []
      x-xgen-owner-team: Atlas Dedicated
    post:
      tags:
      - Atlas Resource Policies
      summary: Create one Atlas Resource Policy
      description: Create one Atlas Resource Policy for an org.
      operationId: createAtlasResourcePolicy
      parameters:
      - $ref: '#/components/parameters/orgId'
      requestBody:
        description: Atlas Resource Policy to create.
        content:
          application/vnd.atlas.2025-01-01+json:
            schema:
              $ref: '#/components/schemas/ApiAtlasResourcePolicyCreateView'
            x-xgen-version: '2025-01-01'
        required: true
      responses:
        '201':
          description: Created
          content:
            application/vnd.atlas.2025-01-01+json:
              schema:
                $ref: '#/components/schemas/ApiAtlasResourcePolicyView'
              x-xgen-version: '2025-01-01'
        '400':
          description: Bad request.
          content:
            application/vnd.atlas.2025-01-01+json:
              schema:
                $ref: '#/components/schemas/ApiAtlasInvalidResourcePolicyCreateErrorView'
              x-xgen-version: '2025-01-01'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
        '500':
          $ref: '#/components/responses/internalServerError'
      security:
      - DigestAuth: []
      x-xgen-owner-team: Atlas Dedicated
  "/api/atlas/v2/orgs/{orgId}/resourcePolicies/{resourcePolicyId}":
    get:
      tags:
      - Atlas Resource Policies
      summary: Return one Atlas Resource Policy
      description: Return one Atlas Resource Policy for an org.
      operationId: getAtlasResourcePolicy
      parameters:
      - $ref: '#/components/parameters/orgId'
      - name: resourcePolicyId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: OK
          content:
            application/vnd.atlas.2025-01-01+json:
              schema:
                $ref: '#/components/schemas/ApiAtlasResourcePolicyView'
              x-xgen-version: '2025-01-01'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
        '500':
          $ref: '#/components/responses/internalServerError'
      security:
      - DigestAuth: []
      x-xgen-owner-team: Atlas Dedicated
    delete:
      tags:
      - Atlas Resource Policies
      summary: Delete one Atlas Resource Policy
      description: Delete one Atlas Resource Policy for an org.
      operationId: deleteAtlasResourcePolicy
      parameters:
      - $ref: '#/components/parameters/orgId'
      - name: resourcePolicyId
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: This endpoint does not return a response body.
          content:
            application/vnd.atlas.2025-01-01+json:
              schema:
                $ref: '#/components/schemas/NoBody'
              x-xgen-version: '2025-01-01'
        '400':
          $ref: '#/components/responses/badRequest'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
        '500':
          $ref: '#/components/responses/internalServerError'
      security:
      - DigestAuth: []
      x-xgen-owner-team: Atlas Dedicated
    patch:
      tags:
      - Atlas Resource Policies
      summary: Update one Atlas Resource Policy
      description: Update one Atlas Resource Policy for an org.
      operationId: updateAtlasResourcePolicy
      parameters:
      - $ref: '#/components/parameters/orgId'
      - name: resourcePolicyId
        in: path
        required: true
        schema:
          type: string
      requestBody:
        description: Atlas Resource Policy to update.
        content:
          application/vnd.atlas.2025-01-01+json:
            schema:
              $ref: '#/components/schemas/ApiAtlasResourcePolicyEditView'
            x-xgen-version: '2025-01-01'
        required: true
      responses:
        '200':
          description: Ok
          content:
            application/vnd.atlas.2025-01-01+json:
              schema:
                $ref: '#/components/schemas/ApiAtlasResourcePolicyView'
              x-xgen-version: '2025-01-01'
        '400':
          description: Bad request.
          content:
            application/vnd.atlas.2025-01-01+json:
              schema:
                $ref: '#/components/schemas/ApiAtlasInvalidResourcePolicyCreateErrorView'
              x-xgen-version: '2025-01-01'
        '401':
          $ref: '#/components/responses/unauthorized'
        '404':
          $ref: '#/components/responses/notFound'
        '500':
          $ref: '#/components/responses/internalServerError'
      security:
      - DigestAuth: []
      x-xgen-owner-team: Atlas Dedicated
components:
  parameters:
    orgId:
      name: orgId
      in: path
      description: Unique 24-hexadecimal digit string that identifies the organization
        that contains your projects. Use the
        [/orgs](#tag/Organizations/operation/listOrganizations) endpoint to
        retrieve all organizations to which the authenticated user has access.
      required: true
      schema:
        maxLength: 24
        minLength: 24
        pattern: ^([a-f0-9]{24})$
        type: string
        example: 4888442a3354817a7320eb61
    groupId:
      description: >-
        Unique 24-hexadecimal digit string that identifies your project. Use the
        [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all
        projects to which the authenticated user has access.


        **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.
      in: path
      name: groupId
      required: true
      schema:
        type: string
        example: 32b6e34b3d91647abb20e7b8
        maxLength: 24
        minLength: 24
        pattern: ^([a-f0-9]{24})$
  schemas:
    ApiAtlasPolicyCreate:
      type: object
      properties:
        body:
          type: string
          description: A string that defines the permissions for the policy. The syntax
            used is the Cedar Policy language.
          example: |2
              forbid (
                principal,
                action == cloud::Action::"cluster.createEdit",
                resource
              ) when {
               context.cluster.regions.contains(cloud::region::"aws:us-east-1")
              };
    ApiAtlasResourcePolicyCreateView:
      type: object
      properties:
        name:
          type: string
          description: Human-readable label that describes the atlas resource policy.
        policies:
          type: array
          description: List of policies that make up the atlas resource policy.
          items:
            $ref: "#/components/schemas/ApiAtlasPolicyCreate"
    
    StreamsProcessor:
      type: object
      description: An atlas stream processor.
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal character string that identifies the stream
            processor.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        name:
          type: string
          description: Human-readable name of the stream processor.
        options:
          $ref: "#/components/schemas/StreamsOptions"
        pipeline:
          type: array
          description: Stream aggregation pipeline you want to apply to your streaming data.
          items:
            $ref: "#/components/schemas/Document"
    ApiAtlasUserMetadataView:
      type: object
      properties:
        id:
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          type: string
          description: Unique 24-hexadecimal character string that identifies a user.
          readOnly: true
          example: 32b6e34b3d91647abb20e7b8
        name:
          type: string
          description: Human-readable label that describes a user.
          readOnly: true
      description: The user that last updated the atlas resource policy.
      readOnly: true
    ApiAtlasPolicyView:
      type: object
      properties:
        body:
          type: string
          description: A string that defines the permissions for the policy. The syntax used is the Cedar Policy language.
          readOnly: true
          example: some example
        id:
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          type: string
          description: Unique 24-hexadecimal character string that identifies the policy.
          readOnly: true
          example: 32b6e34b3d91647abb20e7b8
    ApiAtlasPolicy:
      type: object
      properties:
        body:
          type: string
          description: A string that defines the permissions for the policy. The syntax
            used is the Cedar Policy language.
          readOnly: true
          example: |2
              forbid (
                principal,
                action == cloud::Action::"cluster.createEdit",
                resource
              ) when {
               context.cluster.regions.contains(cloud::region::"aws:us-east-1")
              };
        id:
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          type: string
          description: Unique 24-hexadecimal character string that identifies the policy.
          readOnly: true
          example: 32b6e34b3d91647abb20e7b8
    ApiAtlasResourcePolicyView:
      type: object
      properties:
        createdByUser:
          $ref: '#/components/schemas/ApiAtlasUserMetadataView'
        createdDate:
          type: string
          description: Date and time in UTC when the atlas resource policy was created.
          format: date-time
          readOnly: true
          example: '2022-01-01T00:00:00Z'
        id:
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          type: string
          description: Unique 24-hexadecimal character string that identifies the atlas resource policy.
          readOnly: true
          example: 32b6e34b3d91647abb20e7b8
        lastUpdatedByUser:
          $ref: '#/components/schemas/ApiAtlasUserMetadataView'
        lastUpdatedDate:
          type: string
          description: Date and time in UTC when the atlas resource policy was last updated.
          format: date-time
          readOnly: true
          example: '2022-01-01T00:00:00Z'
        name:
          type: string
          description: Human-readable label that describes the atlas resource policy.
          readOnly: true
        orgId:
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          type: string
          description: Unique 24-hexadecimal character string that identifies the organization the atlas resource policy belongs to.
          readOnly: true
          example: 32b6e34b3d91647abb20e7b8
        policies:
          type: array
          description: List of policies that make up the atlas resource policy.
          readOnly: true
          items:
            $ref: '#/components/schemas/ApiAtlasPolicyView'
        version:
          type: string
          description: A string that identifies the version of the atlas resource policy.
          readOnly: true
          example: v1
    StreamsProcessorWithStats:
      type: object
      description: An atlas stream processor with optional stats.
      properties:
        _id:
          type: string
          description: Unique 24-hexadecimal character string that identifies the stream
            processor.
          example: 32b6e34b3d91647abb20e7b8
          maxLength: 24
          minLength: 24
          pattern: ^([a-f0-9]{24})$
          readOnly: true
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
        name:
          type: string
          description: Human-readable name of the stream processor.
          readOnly: true
        pipeline:
          type: array
          description: Stream aggregation pipeline you want to apply to your streaming data.
          items:
            $ref: "#/components/schemas/Document"
          readOnly: true
        state:
          type: string
          description: The state of the stream processor.
          readOnly: true
        stats:
          type: object
          description: The stats associated with the stream processor.
          readOnly: true
      required:
        - _id
        - name
        - pipeline
        - state
    StreamsOptions:
      type: object
      description: Optional configuration for the stream processor.
      properties:
        dlq:
          $ref: "#/components/schemas/StreamsDLQ"
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
    StreamsDLQ:
      type: object
      description: Dead letter queue for the stream processor.
      properties:
        coll:
          type: string
          description: Name of the collection that will be used for the DLQ.
        connectionName:
          type: string
          description: Connection name that will be used to write DLQ messages to. Has to
            be an Atlas connection.
        db:
          type: string
          description: Name of the database that will be used for the DLQ.
        links:
          type: array
          description: List of one or more Uniform Resource Locators (URLs) that point to
            API sub-resources, related API resources, or both. RFC 5988 outlines
            these relationships.
          externalDocs:
            description: Web Linking Specification (RFC 5988)
            url: https://datatracker.ietf.org/doc/html/rfc5988
          items:
            $ref: "#/components/schemas/Link"
          readOnly: true
