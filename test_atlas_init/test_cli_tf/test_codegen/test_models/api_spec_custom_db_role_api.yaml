openapi: 3.0.1
info:
  description: minimal spec
  version: '2.0'
  title: MongoDB Atlas Administration API
paths:
  /api/atlas/v2/groups/{groupId}/customDBRoles/roles/{roleName}:
    delete:
      description: Removes one custom role from the specified project. You can't remove a custom role that would leave one or more child roles with no parent roles or actions. You also can't remove a custom role that would leave one or more database users without roles. To use this resource, the requesting Service Account or API Key must have the Project Owner role, Project Stream Processing Owner role, or the Project Database Access Admin role.
      operationId: deleteCustomDatabaseRole
      parameters:
      - $ref: '#/components/parameters/envelope'
      - $ref: '#/components/parameters/groupId'
      - $ref: '#/components/parameters/pretty'
      - description: Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project.
        in: path
        name: roleName
        required: true
        schema:
          type: string
      responses:
        '204':
          content:
            application/vnd.atlas.2023-01-01+json:
              x-xgen-version: '2023-01-01'
          description: No Content
      summary: Remove One Custom Role from One Project
      tags:
      - Custom Database Roles
      x-codeSamples:
      - label: curl
        lang: cURL
        source: "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\\n  --digest \\\n  --header \"Accept: application/vnd.atlas.2025-03-12+json\" \\\n  -X DELETE \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/customDBRoles/roles/{roleName}\""
      - label: Atlas CLI
        lang: cURL
        source: atlas api deleteCustomDatabaseRole --help
      x-xgen-docs-url: https://mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Custom-Database-Roles/operation/deleteCustomDatabaseRole
    get:
      description: Returns one custom role for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.
      operationId: getCustomDatabaseRole
      parameters:
      - $ref: '#/components/parameters/envelope'
      - $ref: '#/components/parameters/groupId'
      - $ref: '#/components/parameters/pretty'
      - description: Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project.
        in: path
        name: roleName
        required: true
        schema:
          type: string
      responses:
        '200':
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: '#/components/schemas/UserCustomDBRole'
              x-xgen-version: '2023-01-01'
          description: OK
      summary: Return One Custom Role in One Project
      tags:
      - Custom Database Roles
      x-codeSamples:
      - label: curl
        lang: cURL
        source: "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\\n  --digest \\\n  --header \"Accept: application/vnd.atlas.2025-03-12+json\" \\\n  -X GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/customDBRoles/roles/{roleName}?pretty=true\""
      - label: Atlas CLI
        lang: cURL
        source: atlas api getCustomDatabaseRole --help
      x-xgen-docs-url: https://mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Custom-Database-Roles/operation/getCustomDatabaseRole
    patch:
      description: Updates one custom role in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role, the Project Stream Processing Owner role, or the Project Database Access Admin role.
      operationId: updateCustomDatabaseRole
      parameters:
      - $ref: '#/components/parameters/envelope'
      - $ref: '#/components/parameters/groupId'
      - $ref: '#/components/parameters/pretty'
      - description: Human-readable label that identifies the role for the request. This name must beunique for this custom role in this project.
        in: path
        name: roleName
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: '#/components/schemas/UpdateCustomDBRole'
        description: Updates one custom role in the specified project.
        required: true
      responses:
        '200':
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: '#/components/schemas/UserCustomDBRole'
              x-xgen-version: '2023-01-01'
          description: OK
      summary: Update One Custom Role in One Project
      tags:
      - Custom Database Roles
      x-codeSamples:
      - label: curl
        lang: cURL
        source: "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\\n  --digest \\\n  --header \"Accept: application/vnd.atlas.2025-03-12+json\" \\\n  --header \"Content-Type: application/vnd.atlas.2025-03-12+json\" \\\n  -X PATCH \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/customDBRoles/roles/{roleName}\"\n  -d { <Payload> }"
      - label: Atlas CLI
        lang: cURL
        source: atlas api updateCustomDatabaseRole --help
      x-xgen-docs-url: https://mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Custom-Database-Roles/operation/updateCustomDatabaseRole
  /api/atlas/v2/groups/{groupId}/customDBRoles/roles:
    get:
      description: Returns all custom roles for the specified project. To use this resource, the requesting Service Account or API Key must have the Project Read Only role.
      operationId: listCustomDatabaseRoles
      parameters:
      - $ref: '#/components/parameters/envelope'
      - $ref: '#/components/parameters/groupId'
      - $ref: '#/components/parameters/pretty'
      responses:
        '200':
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                items:
                  $ref: '#/components/schemas/UserCustomDBRole'
                type: array
                x-xgen-IPA-exception:
                  xgen-IPA-124-array-max-items: Schema predates IPA validation
              x-xgen-version: '2023-01-01'
          description: OK
      summary: Return All Custom Roles in One Project
      tags:
      - Custom Database Roles
      x-codeSamples:
      - label: curl
        lang: cURL
        source: "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\\n  --digest \\\n  --header \"Accept: application/vnd.atlas.2025-03-12+json\" \\\n  -X GET \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/customDBRoles/roles?pretty=true\""
      - label: Atlas CLI
        lang: cURL
        source: atlas api listCustomDatabaseRoles --help
      x-xgen-docs-url: https://mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Custom-Database-Roles/operation/listCustomDatabaseRoles
    post:
      description: Creates one custom role in the specified project. To use this resource, the requesting Service Account or API Key must have the Project Owner role, Project Stream Processing Owner role, or the Project Database Access Admin role.
      operationId: createCustomDatabaseRole
      parameters:
      - $ref: '#/components/parameters/envelope'
      - $ref: '#/components/parameters/groupId'
      - $ref: '#/components/parameters/pretty'
      requestBody:
        content:
          application/vnd.atlas.2023-01-01+json:
            schema:
              $ref: '#/components/schemas/UserCustomDBRole'
        description: Creates one custom role in the specified project.
        required: true
      responses:
        '202':
          content:
            application/vnd.atlas.2023-01-01+json:
              schema:
                $ref: '#/components/schemas/UserCustomDBRole'
              x-xgen-version: '2023-01-01'
          description: Accepted
      summary: Create One Custom Role
      tags:
      - Custom Database Roles
      x-codeSamples:
      - label: curl
        lang: cURL
        source: "curl --user \"{PUBLIC-KEY}:{PRIVATE-KEY}\" \\\n  --digest \\\n  --header \"Accept: application/vnd.atlas.2025-03-12+json\" \\\n  --header \"Content-Type: application/vnd.atlas.2025-03-12+json\" \\\n  -X POST \"https://cloud.mongodb.com/api/atlas/v2/groups/{groupId}/customDBRoles/roles\"\n  -d { <Payload> }"
      - label: Atlas CLI
        lang: cURL
        source: atlas api createCustomDatabaseRole --help
      x-xgen-docs-url: https://mongodb.com/docs/atlas/reference/api-resources-spec/v2/#tag/Custom-Database-Roles/operation/createCustomDatabaseRole
components:
  schemas:
    DatabaseInheritedRole:
      description: Role inherited from another context for this database user.
      externalDocs:
        description: Built-in MongoDB Roles
        url: https://docs.mongodb.com/manual/reference/built-in-roles/
      properties:
        db:
          description: Human-readable label that identifies the database on which someone grants the action to one MongoDB user.
          type: string
        role:
          description: Human-readable label that identifies the role inherited. Set this value to `admin` for every role except `read` or `readWrite`.
          externalDocs:
            description: MongoDB Built-In Roles
            url: https://docs.mongodb.com/manual/reference/built-in-roles/
          type: string
      required:
      - db
      - role
      title: Inherited Role
      type: object
    DatabasePermittedNamespaceResource:
      description: Namespace to which this database user has access.
      externalDocs:
        description: Cluster Resources
        url: https://docs.mongodb.com/manual/reference/resource-document/#cluster-resource
      properties:
        cluster:
          description: Flag that indicates whether to grant the action on the cluster resource. If `true`, MongoDB Cloud ignores the **actions.resources.collection** and **actions.resources.db** parameters.
          type: boolean
        collection:
          description: 'Human-readable label that identifies the collection on which you grant the action to one MongoDB user. If you don''t set this parameter, you grant the action to all collections in the database specified in the **actions.resources.db** parameter. If you set `"actions.resources.cluster" : true`, MongoDB Cloud ignores this parameter.'
          type: string
        db:
          description: 'Human-readable label that identifies the database on which you grant the action to one MongoDB user. If you set `"actions.resources.cluster" : true`, MongoDB Cloud ignores this parameter.'
          type: string
      required:
      - cluster
      - collection
      - db
      title: Permitted Namespace
      type: object
    DatabasePrivilegeAction:
      description: Privilege action that the role grants.
      properties:
        action:
          description: Human-readable label that identifies the privilege action.
          enum:
          - FIND
          - INSERT
          - REMOVE
          - UPDATE
          - BYPASS_DOCUMENT_VALIDATION
          - USE_UUID
          - KILL_OP
          - BYPASS_DEFAULT_MAX_TIME_MS
          - CREATE_COLLECTION
          - CREATE_INDEX
          - DROP_COLLECTION
          - ENABLE_PROFILER
          - KILL_ANY_CURSOR
          - CHANGE_STREAM
          - COLL_MOD
          - COMPACT
          - CONVERT_TO_CAPPED
          - DROP_DATABASE
          - DROP_INDEX
          - RE_INDEX
          - RENAME_COLLECTION_SAME_DB
          - SET_USER_WRITE_BLOCK
          - BYPASS_USER_WRITE_BLOCK
          - LIST_SESSIONS
          - KILL_ANY_SESSION
          - COLL_STATS
          - CONN_POOL_STATS
          - DB_HASH
          - DB_STATS
          - GET_CMD_LINE_OPTS
          - GET_LOG
          - GET_PARAMETER
          - GET_SHARD_MAP
          - HOST_INFO
          - IN_PROG
          - LIST_DATABASES
          - LIST_COLLECTIONS
          - LIST_INDEXES
          - LIST_SHARDS
          - NET_STAT
          - REPL_SET_GET_CONFIG
          - REPL_SET_GET_STATUS
          - SERVER_STATUS
          - VALIDATE
          - SHARDING_STATE
          - TOP
          - SQL_GET_SCHEMA
          - SQL_SET_SCHEMA
          - VIEW_ALL_HISTORY
          - OUT_TO_S3
          - OUT_TO_AZURE
          - OUT_TO_GCS
          - STORAGE_GET_CONFIG
          - STORAGE_SET_CONFIG
          - FLUSH_ROUTER_CONFIG
          - ENABLE_SHARDING
          - CHECK_METADATA_CONSISTENCY
          - MOVE_CHUNK
          - SPLIT_CHUNK
          - ANALYZE_SHARD_KEY
          - REFINE_COLLECTION_SHARD_KEY
          - CLEAR_JUMBO_FLAG
          - RESHARD_COLLECTION
          - SHARDED_DATA_DISTRIBUTION
          - GET_STREAM_PROCESSOR
          - CREATE_STREAM_PROCESSOR
          - PROCESS_STREAM_PROCESSOR
          - START_STREAM_PROCESSOR
          - STOP_STREAM_PROCESSOR
          - DROP_STREAM_PROCESSOR
          - SAMPLE_STREAM_PROCESSOR
          - LIST_STREAM_PROCESSORS
          - LIST_CONNECTIONS
          - STREAM_PROCESSOR_STATS
          type: string
        resources:
          description: List of resources on which you grant the action.
          items:
            $ref: '#/components/schemas/DatabasePermittedNamespaceResource'
          type: array
      required:
      - action
      title: Database Privilege Action
      type: object
    UpdateCustomDBRole:
      properties:
        actions:
          description: List of the individual privilege actions that the role grants.
          items:
            $ref: '#/components/schemas/DatabasePrivilegeAction'
          type: array
        inheritedRoles:
          description: List of the built-in roles that this custom role inherits.
          items:
            $ref: '#/components/schemas/DatabaseInheritedRole'
          type: array
          uniqueItems: true
      type: object
    UserCustomDBRole:
      properties:
        actions:
          description: List of the individual privilege actions that the role grants.
          items:
            $ref: '#/components/schemas/DatabasePrivilegeAction'
          type: array
        inheritedRoles:
          description: List of the built-in roles that this custom role inherits.
          items:
            $ref: '#/components/schemas/DatabaseInheritedRole'
          type: array
          uniqueItems: true
        roleName:
          description: Human-readable label that identifies the role for the request. This name must be unique for this custom role in this project.
          type: string
      required:
      - roleName
      type: object
  parameters:
    envelope:
      description: Flag that indicates whether Application wraps the response in an `envelope` JSON object. Some API clients cannot access the HTTP response headers or status code. To remediate this, set envelope=true in the query. Endpoints that return a list of results use the results object as an envelope. Application adds the status parameter to the response body.
      in: query
      name: envelope
      schema:
        default: false
        type: boolean
    groupId:
      description: 'Unique 24-hexadecimal digit string that identifies your project. Use the [/groups](#tag/Projects/operation/listProjects) endpoint to retrieve all projects to which the authenticated user has access.


        **NOTE**: Groups and projects are synonymous terms. Your group id is the same as your project id. For existing groups, your group/project id remains the same. The resource and corresponding endpoints use the term groups.'
      in: path
      name: groupId
      required: true
      schema:
        example: 32b6e34b3d91647abb20e7b8
        pattern: ^([a-f0-9]{24})$
        type: string
      x-xgen-IPA-exception:
        xgen-IPA-117-description-should-not-use-inline-links: Parameters don't support externalDocs
    pretty:
      description: Flag that indicates whether the response body should be in the prettyprint format.
      in: query
      name: pretty
      schema:
        default: false
        externalDocs:
          description: Prettyprint
          url: https://en.wikipedia.org/wiki/Prettyprint
        type: boolean
tags: []
